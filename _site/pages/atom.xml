<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>Tsthght的博客</title>
    <link>http://localhost:4000</link>
    <description>My personal blog</description>
    
      <item>
        <title>如何制作RPM包</title>
        <link>http://localhost:4000/2016/12/06/rpmbuild-introduction.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/12/06/rpmbuild-introduction.html</guid>
        <pubDate>Tue, 06 Dec 2016 14:28:49 +0800</pubDate>
        <description>&lt;h1&gt;简介&lt;/h1&gt;

&lt;p&gt;RPM也是一个递归缩写（RPM Package Manager），类似众所周知的还有：PNG（PNG&amp;#39;s not GIF）、GNU（GNU&amp;#39;s not Unix）。之前是RedHat的软件包管理，开源后被移植到SunOS/Solaris/AIX/Irix等UNIX-LIKE系统之上，其遵循GPL协议。&lt;br&gt;
RPM包中除了程序运行时所需的文件，也包括其他文件：保证其正常的附加文件和特定版本文件（软件包依赖关系），其可以使用户以binary形式安装软件包，并且替用户检查相关的库文件。      &lt;/p&gt;

&lt;h1&gt;类型&lt;/h1&gt;

&lt;p&gt;二进制类包：包括RPM安装包和调试信息包&lt;br&gt;
源码类包：源码包和开发包     &lt;/p&gt;

&lt;h1&gt;制作过程&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;创建目录结构&lt;br&gt;
&amp;gt; yum install rpmdevtools&lt;br&gt;
&amp;gt; rpmdev -setuptree&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上述命令会在当前用户主目录下创建RPM构建的根目录结构, 如果需要改变默认位置，可以修改配置文件: ~/.rpmmacros 中的变量_topdir。目录结构如下:                 &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;.&lt;br&gt;
|&lt;strong&gt;BUILD(打包过程的工作目录)&lt;br&gt;
|&lt;/strong&gt;RPMS(存放生成的二进制包，不同硬件平台存放在不同的文件夹下)&lt;br&gt;
|&lt;strong&gt;SOURCES(存放打包资源，包括源码打包文件和补丁文件)&lt;br&gt;
|&lt;/strong&gt;SPECS(存放SPECS文档)&lt;br&gt;
|__SRPMS(存放生成的源码包)     &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;撰写SPECS文档&lt;br&gt;&lt;/li&gt;
&lt;li&gt;放置源代码&lt;br&gt;&lt;/li&gt;
&lt;li&gt;构建RPM包&lt;br&gt;
&amp;gt; cd ~/rpmbuild&lt;br&gt;
&amp;gt; rpmbuild -ba SPECS/xxx.spec&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;错误与解决办法&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;error: Installed(but unpackaged)files(s) found&lt;br&gt;
找到/usr/lib/rpm/macros中&lt;br&gt;
%_&lt;em&gt;check&lt;/em&gt;files     /usr/lib/rpm/check-files %{buildroot}   注释掉&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;参考&lt;/h1&gt;

&lt;p&gt;[1] &lt;a href=&quot;http://www.cnblogs.com/wonderow/archive/2005/07/09/189523.html&quot;&gt;有趣的递归缩写&lt;/a&gt;&lt;br&gt;
[2] &lt;a href=&quot;https://segmentfault.com/a/1190000002539129&quot;&gt;制作RPM包&lt;/a&gt;&lt;br&gt;
[3] &lt;a href=&quot;http://blog.sina.com.cn/s/blog_467eb8ca010008p3.html&quot;&gt;中间遇到了 error: Installed (but unpackaged) file(s) found: 解决的办法是&lt;/a&gt;&lt;br&gt;
[4] &lt;a href=&quot;http://blog.sina.com.cn/s/blog_467eb8ca010008p0.html&quot;&gt;制作rpm包： error: Installed (but unpackaged) file(s) found&lt;/a&gt;     &lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>常见的打包解包命令</title>
        <link>http://localhost:4000/2016/12/05/zip-unzip-command.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/12/05/zip-unzip-command.html</guid>
        <pubDate>Mon, 05 Dec 2016 21:44:24 +0800</pubDate>
        <description>&lt;h1&gt;.tar格式&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;解包：[＊＊＊＊＊＊＊]$ tar xvf FileName.tar&lt;br&gt;
打包：[＊＊＊＊＊＊＊]$ tar cvf FileName.tar DirName（注：tar是打包，不是压缩！）    &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;.gz格式&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;解压1：[＊＊＊＊＊＊＊]$ gunzip FileName.gz&lt;br&gt;
解压2：[＊＊＊＊＊＊＊]$ gzip -d FileName.gz&lt;br&gt;
压 缩：[＊＊＊＊＊＊＊]$ gzip FileName      &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;.tar.gz格式&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;解压：[＊＊＊＊＊＊＊]$ tar zxvf FileName.tar.gz&lt;br&gt;
压缩：[＊＊＊＊＊＊＊]$ tar zcvf FileName.tar.gz DirName     &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;.bz2格式&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;解压1：[＊＊＊＊＊＊＊]$ bzip2 -d FileName.bz2&lt;br&gt;
解压2：[＊＊＊＊＊＊＊]$ bunzip2 FileName.bz2&lt;br&gt;
压 缩： [＊＊＊＊＊＊＊]$ bzip2 -z FileName      &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;.tar.bz2格式&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;解压：[＊＊＊＊＊＊＊]$ tar jxvf FileName.tar.bz2&lt;br&gt;
压缩：[＊＊＊＊＊＊＊]$ tar jcvf FileName.tar.bz2 DirName    &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;.bz格式&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;解压1：[＊＊＊＊＊＊＊]$ bzip2 -d FileName.bz&lt;br&gt;
解压2：[＊＊＊＊＊＊＊]$ bunzip2 FileName.bz    &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;.tar.bz格式&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;解压：[＊＊＊＊＊＊＊]$ tar jxvf FileName.tar.bz   &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;.Z格式&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;解压：[＊＊＊＊＊＊＊]$ uncompress FileName.Z&lt;br&gt;
压缩：[＊＊＊＊＊＊＊]$ compress FileName    &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;.tar.Z格式&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;解压：[＊＊＊＊＊＊＊]$ tar Zxvf FileName.tar.Z&lt;br&gt;
压缩：[＊＊＊＊＊＊＊]$ tar Zcvf FileName.tar.Z DirName    &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;.tgz格式&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;解压：[＊＊＊＊＊＊＊]$ tar zxvf FileName.tgz    &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;.tar.tgz格式&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;解压：[＊＊＊＊＊＊＊]$ tar zxvf FileName.tar.tgz&lt;br&gt;
压缩：[＊＊＊＊＊＊＊]$ tar zcvf FileName.tar.tgz FileName    &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;.zip格式&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;解压：[＊＊＊＊＊＊＊]$ unzip FileName.zip&lt;br&gt;
压缩：[＊＊＊＊＊＊＊]$ zip FileName.zip DirName   &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;.lha格式&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;解压：[＊＊＊＊＊＊＊]$ lha -e FileName.lha&lt;br&gt;
压缩：[＊＊＊＊＊＊＊]$ lha -a FileName.lha FileName     &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;.rar格式&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;解压：[＊＊＊＊＊＊＊]$ rar a FileName.rar&lt;br&gt;
压缩：[＊＊＊＊＊＊＊]$ rar e FileName.rar    &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;参考&lt;/h1&gt;

&lt;p&gt;[1] &lt;a href=&quot;https://zhidao.baidu.com/question/72708657.html&quot;&gt;linux把文件压缩成.tar.gz的命令&lt;/a&gt;     &lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>automake常用的宏的介绍</title>
        <link>http://localhost:4000/2016/12/05/configure-macro-introduction.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/12/05/configure-macro-introduction.html</guid>
        <pubDate>Mon, 05 Dec 2016 19:24:24 +0800</pubDate>
        <description>&lt;h1&gt;configure.ac 中的一些配置&lt;/h1&gt;

&lt;p&gt;AC&lt;em&gt;PREREQ(2.5.9)                        #工具版本号，不需要关系&lt;br&gt;
AC&lt;/em&gt;INIT(atlas, 1.0, tsthght@163.com)    #指示：可执行名称+版本号+BUG-REPORT&lt;br&gt;
AC&lt;em&gt;CONFIG&lt;/em&gt;SRCDIR([src/main.c])          #检验源文件是否缺失     &lt;/p&gt;

&lt;p&gt;AM&lt;em&gt;CONFIG&lt;/em&gt;HEADER(config.h)              #如果config.h没有，不需要对其进行检查&lt;br&gt;
AM&lt;em&gt;INIT&lt;/em&gt;AUTOMAKE(atlas, 1.0, tsthght@163.com) #可选     &lt;/p&gt;

&lt;h1&gt;checks for programs&lt;/h1&gt;

&lt;p&gt;AC&lt;em&gt;PROG&lt;/em&gt;CC                              #检查cc，如果c++则AC&lt;em&gt;PROG&lt;/em&gt;CXX    &lt;/p&gt;

&lt;h1&gt;checks for libraies&lt;/h1&gt;

&lt;p&gt;AC&lt;em&gt;CHECK&lt;/em&gt;LIB([lib], [func], [if&lt;em&gt;exist&lt;/em&gt;action], [not&lt;em&gt;exist&lt;/em&gt;action]) #检查库, 例如：AC&lt;em&gt;CHECK&lt;/em&gt;LIB([m], [sqrt])     &lt;/p&gt;

&lt;p&gt;AC&lt;em&gt;PROG&lt;/em&gt;RANLIB                         #使用静态库时，需要&lt;br&gt;
AC&lt;em&gt;PROG&lt;/em&gt;LIBTOOL                        #使用动态库时，需要    &lt;/p&gt;

&lt;h1&gt;checks for header files&lt;/h1&gt;

&lt;p&gt;AC&lt;em&gt;CHECK&lt;/em&gt;HEADERS([float.h malloc.h stdlib.h])     &lt;/p&gt;

&lt;h1&gt;checks for typedefs, structures, and compiler characteristics&lt;/h1&gt;

&lt;h1&gt;AC&lt;em&gt;C&lt;/em&gt;CONST&lt;/h1&gt;

&lt;h1&gt;checks for libray functions&lt;/h1&gt;

&lt;h1&gt;AC&lt;em&gt;FUNC&lt;/em&gt;MALLOC&lt;/h1&gt;

&lt;p&gt;AC&lt;em&gt;CHECK&lt;/em&gt;FUNCS([pow sqrt])     &lt;/p&gt;

&lt;h1&gt;输出的文件，有几个Makefile.am就有几个Makefile&lt;/h1&gt;

&lt;p&gt;AC_OUTPUT([&lt;br&gt;
    Makefile&lt;br&gt;
    src/Makefile&lt;br&gt;
    lib/Makefile&lt;br&gt;
])     &lt;/p&gt;

&lt;h1&gt;Makefile.am中的一些配置&lt;/h1&gt;

&lt;p&gt;AUTOMAKE_OPTIONS=foreign&lt;br&gt;
SUBDIRS=lib src                          #指示所有的子Makefile.am所在的目录&lt;br&gt;
CURRENTPATH=$(shell /bin/pwd)            #指示当前路径&lt;br&gt;
INCLUDES=-l$(CURRENTPATH)/include        #指示src中头文件之外的其他头文件的目录，需要EXPORT到子Makefile.am中去&lt;br&gt;
export INCLUDES    &lt;/p&gt;

&lt;h1&gt;生成lib需要的一些配置&lt;/h1&gt;

&lt;p&gt;noinst&lt;em&gt;LIBRARIES=libnew.a                #noinst:not install&lt;br&gt;
libnew&lt;/em&gt;a&lt;em&gt;SOURCES=new.c                   #注意.换成&lt;/em&gt;     &lt;/p&gt;

&lt;h1&gt;成成可执行文件需要的一些配置&lt;/h1&gt;

&lt;p&gt;bin&lt;em&gt;PROGRAMS=main&lt;br&gt;
main&lt;/em&gt;SOURCES=main.h main.c&lt;br&gt;
main&lt;em&gt;LDADD=$(top&lt;/em&gt;srcdir)/lib/libnew.a      &lt;/p&gt;

&lt;h1&gt;参考&lt;/h1&gt;

&lt;p&gt;[1] &lt;a href=&quot;http://blog.csdn.net/shanshanpt/article/details/17200035&quot;&gt;Makefile实际用例分析&lt;/a&gt;    &lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>automake autoconf 入门教程</title>
        <link>http://localhost:4000/2016/12/05/automake-introduction.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/12/05/automake-introduction.html</guid>
        <pubDate>Mon, 05 Dec 2016 17:55:24 +0800</pubDate>
        <description>&lt;h1&gt;Makefile介绍&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Makefile让编译器知道编译一个文件所需依赖的其他的文件，当这些依赖文件有变化时，编译器会自动的发现最终的生成文件已经过时，而仅仅重新编译过时的模块&lt;br&gt;&lt;/li&gt;
&lt;li&gt;自己写的Makefile不一定符合惯例，且会和开发环境重度耦合，automake解决了手工书写Makefile的诸多问题&lt;br&gt;&lt;/li&gt;
&lt;li&gt;使用automake时，程序开发人员只需要写一些简单的含有预定义的宏文件&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;环境配置&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;yum install automake&lt;br&gt;
yum install autoconf   &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;举例hellworld&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;创建一个示例程序: helloworld&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;mkdir hellowrld&lt;br&gt;
cd helloworld    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
int main(int argc, char **argv) {     
    printf(&quot;%s&quot;, &quot;hello, linux world!\n&quot;);     
    return 0;
}    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;生成config&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;autoscan&lt;br&gt;
mv configure.scan configure.ac    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;修改configure.ac中的内容:     
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;AC_INIT(helloworld.c)
AM_INIT_AUTOMAKE(helloworld, 1.0)    
AC_PROG_CC    
AC_OUTPUT(Makefile)   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;aclocal&lt;br&gt;
autoconf   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;通过上述命令，分别阐述了:aclocal.m4和configure
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;新建Makefile.am&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;touch Makefile.am   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;内容如下：        
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;AUTOMAKE_OPTIONS=foreign    
bin_PROGRAMS=hellowrld   
helloworld_SOURCES=helloworld.c   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;运行automake&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;automake --add-missing    &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;执行configure生成Makefile&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;./configure   &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;生成的Makefile中预定义操作&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;make&lt;br&gt;
make clean&lt;br&gt;
make install&lt;br&gt;
make dist&lt;br&gt;
make distcheck   &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;参考&lt;/h1&gt;

&lt;p&gt;[1] &lt;a href=&quot;http://www.laruence.com/2009/11/18/1154.html&quot;&gt;automake,autoconf使用详解&lt;/a&gt;   &lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>Markdown 语法学习</title>
        <link>http://localhost:4000/2016/12/05/markdown-directions.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/12/05/markdown-directions.html</guid>
        <pubDate>Mon, 05 Dec 2016 08:49:31 +0800</pubDate>
        <description>&lt;p&gt;&lt;img src=&quot;/images/markdown-logo.png&quot; alt=&quot;image01&quot;&gt;   &lt;/p&gt;

&lt;h1&gt;标题&lt;/h1&gt;

&lt;p&gt;在标题前面添加‘#’号，几级标题就添加几个&amp;#39;#&amp;#39;号   &lt;/p&gt;

&lt;blockquote&gt;
&lt;h1&gt;一级标题&lt;/h1&gt;

&lt;h2&gt;二级标题&lt;/h2&gt;

&lt;h3&gt;三级标题&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;h1&gt;列表&lt;/h1&gt;

&lt;p&gt;列表分为：有序列表和无序列表，无序列表前加&amp;#39;-&amp;#39;，有序列表前加数字   &lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;第一行&lt;br&gt;&lt;/li&gt;
&lt;li&gt;第二行&lt;br&gt;&lt;/li&gt;
&lt;li&gt;第三行&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;- 文本1&lt;br&gt;
- 文本2&lt;br&gt;
- 文本3   &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;链接和图片&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;[显示的文本](url)&lt;br&gt;
![  ](url)   &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;引用&lt;/h1&gt;

&lt;p&gt;在待引用的文本前加&amp;#39;&amp;gt;&amp;#39;即可   &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;gt; 引用内容   &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;粗体与斜体&lt;/h1&gt;

&lt;p&gt;使用一个*包含的一段文本为&lt;em&gt;斜体&lt;/em&gt;， 使用两个**包含的一段文本为&lt;strong&gt;粗体&lt;/strong&gt;   &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;*斜体*&lt;br&gt;
**粗体**   &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;代码引用&lt;/h1&gt;

&lt;p&gt;引用代码时，使用`将语句抱起来，如果多行，可将```置于代码的首行和末行   &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;`hello world`&lt;br&gt;
```&lt;br&gt;
`hello markdown`   &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;表格&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;|col1   |col2  |col3  |   &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;转义&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;使用\进行转义  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;参考&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;[1] &lt;a href=&quot;http://www.jianshu.com/p/q81RER/&quot;&gt;献给写作者的Markdown新手指南&lt;/a&gt;&lt;br&gt;
[2] &lt;a href=&quot;http://wowubuntu.com/markdown/&quot;&gt;markdown语法说明-简体中文版&lt;/a&gt;   &lt;/p&gt;
&lt;/blockquote&gt;
</description>
      </item>
    
      <item>
        <title>2016年12月书单</title>
        <link>http://localhost:4000/2016/12/05/booklist.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/12/05/booklist.html</guid>
        <pubDate>Mon, 05 Dec 2016 00:00:00 +0800</pubDate>
        <description></description>
      </item>
    
      <item>
        <title>使用Jekyll搭建个人博客</title>
        <link>http://localhost:4000/2016/12/03/setup-blogs-by-jekyll.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/12/03/setup-blogs-by-jekyll.html</guid>
        <pubDate>Sat, 03 Dec 2016 22:03:11 +0800</pubDate>
        <description>&lt;h1&gt;Jekyll环境的搭建&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;sudo gem update -system&lt;br&gt;&lt;/li&gt;
&lt;li&gt;sudo gem install jekyll&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;搭建个人博客&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;mkdir jekyll_demo&lt;br&gt;&lt;/li&gt;
&lt;li&gt;cd jekyll_demo&lt;br&gt;&lt;/li&gt;
&lt;li&gt;git init&lt;br&gt;&lt;/li&gt;
&lt;li&gt;git checkout --orphan gh-pages&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;发布博文&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;参考&lt;/h1&gt;

&lt;p&gt;[1] &lt;a href=&quot;https://segmentfault.com/a/1190000000406013&quot;&gt;使用Jekyll在Github上搭建个人博客&lt;/a&gt;     &lt;/p&gt;
</description>
      </item>
    
  </channel>
</rss>
